version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      # - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      # - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      # - DATABASE_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@db:27017/${MONGO_INITDB_DATABASE}
      # - SECRET_KEY=${SECRET_KEY}
      # - AUTH_URL=${AUTH_URL}
      # - DOMAIN_NAME=${DOMAIN_NAME}
      # - EMAIL=${EMAIL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my_network
    # develop:
    #   watch:
    #     - path: ./package.json
    #       action: rebuild
    #     - path: ./next.config.js
    #       action: rebuild
    #     - path: ./package-lock.json
    #       action: rebuild
    #     - path: .
    #       target: /app
    #       action: sync

  db:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/${MONGO_INITDB_DATABASE} --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - my_network

volumes:
  mongodb_data:

networks:
  my_network:
    name: my_network
    driver: bridge
